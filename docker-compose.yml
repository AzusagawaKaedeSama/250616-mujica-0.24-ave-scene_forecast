services:
  scene-forecast:
    build: .
    container_name: scene_forecast_app
    ports:
      - "5000:5000"
    volumes:
      # 挂载数据目录（持久化数据）
      - ./data:/app/data
      - ./results:/app/results
      - ./logs:/app/logs
      - ./models:/app/models
      # 如果有前端静态文件
      - ./frontend:/app/frontend:ro  # 只读挂载
    environment:
      - FLASK_ENV=production
      - PYTHONIOENCODING=utf-8
      - PYTHONUTF8=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # 资源限制（可选）
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 4G
        reservations:
          memory: 2G

# 如果需要数据库（可选）
  # redis:
  #   image: redis:7-alpine
  #   container_name: scene_forecast_redis
  #   ports:
  #     - "6379:6379"
  #   volumes:
  #     - redis_data:/data
  #   restart: unless-stopped

# volumes:
#   redis_data: 